/*
 * üìö Library Management System
 * Developed in Java using JDBC and MySQL
 *
 * Features:
 *  1. Add new books
 *  2. View all books
 *  3. Issue books
 *  4. Return books
 *
 * Author: Your Name
 * Date: October 2025
 */

import java.sql.*;
import java.util.*;

public class LibraryManagementSystem {
    // MySQL Connection Details
    static final String URL = "jdbc:mysql://localhost:3306/librarydb";
    static final String USER = "root";      // change if needed
    static final String PASSWORD = "";      // change if needed

    static Connection con;
    static Scanner sc = new Scanner(System.in);

    public static void main(String[] args) {
        try {
            // Connect to database
            con = DriverManager.getConnection(URL, USER, PASSWORD);
            System.out.println("‚úÖ Connected to MySQL Database Successfully!");

            int choice;
            do {
                System.out.println("\n==============================");
                System.out.println("      üìö LIBRARY MENU");
                System.out.println("==============================");
                System.out.println("1. Add New Book");
                System.out.println("2. View All Books");
                System.out.println("3. Issue a Book");
                System.out.println("4. Return a Book");
                System.out.println("5. Exit");
                System.out.print("Enter your choice: ");
                choice = sc.nextInt();
                sc.nextLine(); // consume newline

                switch (choice) {
                    case 1 -> addBook();
                    case 2 -> viewBooks();
                    case 3 -> issueBook();
                    case 4 -> returnBook();
                    case 5 -> System.out.println("üëã Exiting... Thank you!");
                    default -> System.out.println("‚ö†Ô∏è Invalid choice, try again!");
                }
            } while (choice != 5);

            con.close();

        } catch (SQLException e) {
            System.out.println("‚ùå Database Connection Error!");
            e.printStackTrace();
        }
    }

    // ============================
    // 1Ô∏è‚É£ Add New Book
    // ============================
    static void addBook() {
        try {
            System.out.print("Enter Book Title: ");
            String title = sc.nextLine();
            System.out.print("Enter Author Name: ");
            String author = sc.nextLine();

            String query = "INSERT INTO books (title, author) VALUES (?, ?)";
            PreparedStatement ps = con.prepareStatement(query);
            ps.setString(1, title);
            ps.setString(2, author);
            ps.executeUpdate();

            System.out.println("‚úÖ Book Added Successfully!");
        } catch (SQLException e) {
            System.out.println("‚ùå Error while adding book!");
            e.printStackTrace();
        }
    }

    // ============================
    // 2Ô∏è‚É£ View All Books
    // ============================
    static void viewBooks() {
        try {
            String query = "SELECT * FROM books";
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(query);

            System.out.println("\nüìñ All Books in Library:");
            System.out.println("-----------------------------------------");
            System.out.printf("%-5s %-25s %-20s %-10s%n", "ID", "Title", "Author", "Issued");
            System.out.println("-----------------------------------------");

            while (rs.next()) {
                System.out.printf("%-5d %-25s %-20s %-10s%n",
                        rs.getInt("id"),
                        rs.getString("title"),
                        rs.getString("author"),
                        rs.getBoolean("isIssued") ? "Yes" : "No");
            }

            System.out.println("-----------------------------------------");

        } catch (SQLException e) {
            System.out.println("‚ùå Error fetching book list!");
            e.printStackTrace();
        }
    }

    // ============================
    // 3Ô∏è‚É£ Issue a Book
    // ============================
    static void issueBook() {
        try {
            System.out.print("Enter Book ID to issue: ");
            int id = sc.nextInt();

            // Check if book is available
            String checkQuery = "SELECT * FROM books WHERE id=? AND isIssued=FALSE";
            PreparedStatement check = con.prepareStatement(checkQuery);
            check.setInt(1, id);
            ResultSet rs = check.executeQuery();

            if (rs.next()) {
                String issueQuery = "UPDATE books SET isIssued=TRUE WHERE id=?";
                PreparedStatement ps = con.prepareStatement(issueQuery);
                ps.setInt(1, id);
                ps.executeUpdate();
                System.out.println("‚úÖ Book issued successfully!");
            } else {
                System.out.println("‚ö†Ô∏è Book not available or already issued!");
            }

        } catch (SQLException e) {
            System.out.println("‚ùå Error while issuing book!");
            e.printStackTrace();
        }
    }

    // ============================
    // 4Ô∏è‚É£ Return a Book
    // ============================
    static void returnBook() {
        try {
            System.out.print("Enter Book ID to return: ");
            int id = sc.nextInt();

            String returnQuery = "UPDATE books SET isIssued=FALSE WHERE id=?";
            PreparedStatement ps = con.prepareStatement(returnQuery);
            ps.setInt(1, id);
            int updated = ps.executeUpdate();

            if (updated > 0) {
                System.out.println("‚úÖ Book returned successfully!");
            } else {
                System.out.println("‚ö†Ô∏è Invalid Book ID!");
            }

        } catch (SQLException e) {
            System.out.println("‚ùå Error while returning book!");
            e.printStackTrace();
        }
    }
}
